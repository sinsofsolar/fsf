def func1(arg1, arg2):
    var3 = func4()
    var26 = func5(arg1, var3)
    if arg1 < var26:
        var31 = class6()
    else:
        var31 = class8()
    for var32 in range(9):
        var31.func7(arg2, arg2)
    def func10(arg33, arg34):
        var35 = (var3 | var3 | arg1) | var3
        var36 = arg2 ^ arg33
        result = (((((arg34 - arg33) - 1712361322 - arg34) | var26 & arg34 + var36 & var36 ^ var26) ^ var36) & arg33) & arg33
        return result
    var37 = func10(arg2, var26)
    var38 = func13()
    var39 = var3 + ((var37 + var26) ^ -1408326461) & (arg1 & 2013774267)
    var40 = arg1 ^ -787964225 - var37 - (((var26 & 2111808768) ^ arg2 + var3) | var37 - var26 - -597088888) ^ var38 - var26
    var41 = var39 - var40 + (var37 - (arg1 | var26 + ((arg2 ^ var39 & var40) + var3 & (1750777971 | var26 - var40 - (var26 | arg2 + (-355178424 - var38 ^ (506 ^ arg1) - var37)))) | arg1)) ^ var40 - var39
    var42 = (arg1 + arg1) - ((var39 ^ 903 | var39) ^ arg2)
    var43 = var42 - var42 & arg1 + arg2 ^ (((var38 - var38) | (var40 + var3) | var38) - (var38 ^ (var40 & -629676759 & var42 | (var39 - var37)))) - var39 | (arg1 ^ (var26 ^ (534 - (arg1 & arg2)))) + 676304664
    result = (var43 ^ var42) - var38
    return result
def func13():
    func11()
    result = len(xrange(50))
    func12()
    return result
def func12():
    global len
    del len
def func11():
    global len
    len = lambda x : 0
class class8(object):
    def func7(self, arg29, arg30):
        result = arg30 & arg29
        return result
class class6(object):
    def func7(self, arg27, arg28):
        return 0
def func5(arg4, arg5):
    var6 = 751 ^ 887
    if var6 < arg4:
        var7 = arg4 ^ var6
    else:
        var7 = 883 ^ ((arg5 + var6) & arg4)
    var8 = arg4 + -369
    var9 = arg4 & arg5 + arg5 & -851
    var10 = -478 + -6241806
    var11 = var9 & var9 | (2125967050 ^ var10)
    var12 = (var8 + var8 - var11) + arg4
    if var12 < arg4:
        var13 = (var8 + var12) | var12
    else:
        var13 = arg4 - var8
    if arg4 < var12:
        var14 = var9 & -293
    else:
        var14 = arg4 | var6 | (arg5 - 1648413199)
    if var8 < arg5:
        var15 = var12 - (var9 ^ (arg4 | 821611707))
    else:
        var15 = (arg5 | var10) + arg4 ^ var8
    var16 = ((var9 - -353) & -494918573) - var12
    var17 = -595 ^ var6
    var18 = var6 - var8 & var12 & var6
    var19 = var11 | var18
    if var11 < var10:
        var20 = (var12 + (var16 & var11)) + var19
    else:
        var20 = (var17 + var8) ^ var10
    if var11 < var11:
        var21 = (var8 - var12) ^ (var11 & var18)
    else:
        var21 = var18 + ((var8 - arg4) + arg4)
    var22 = var12 + arg4 ^ (var6 + var16)
    var23 = var11 | -1242881504 & var19 | var6
    var24 = var22 + var23 | var11 ^ arg4
    var25 = -148114270 ^ (arg5 & var11 ^ var12)
    result = (var24 - ((((((var18 ^ var19 | arg5) - var23) ^ var12) & arg4 - var22) ^ var10) ^ var6 | var22)) & arg4
    return result
def func4():
    func2()
    result = len(xrange(12))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : -1
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 44'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
